--6. 과목들의 과목번호와 과목이름을 검색하라.
select sub_no, sub_name from subject;
--7. 학생들의 학번과 이름, 성별을 검색하라.
select stu_no, stu_name, stu_gender from student;
--8. 학생들의 모든 정보를 검색하라.
select * from student;
--9. 학생들의 학번과 이름, 학년, 반을 검색하라.
select stu_no, stu_name, stu_grade, stu_class from student;
--10. 과목들의 과목이름과 교수이름을 검색하라.
select sub_name, sub_prof from subject;


--11. 과목번호, 학번, 점수를 검색하라.
select sub_no, stu_no, enr_grade from enrol;
--12. 학생들의 체중과 신장을 학번, 이름과 함께 검색하라.
select stu_weight, stu_height, stu_no, stu_name from student;
--13. 학생들의 학과 중복을 제거하고 검색하라.
select distinct stu_dept from student;
--14. 학생들의 성별 중복을 제거하고 검색하라.
select distinct stu_gender from student;
--15. 학생들의 학년 중복을 제거하고 검색하라.
select distinct stu_grade from student;

select stu_name, stu_dept
from student
where stu_dept='컴퓨터정보'; --조건

select *
from student
where stu_weight between 60 and 70;         --같음
select *
from student
where stu_weight>=60 and stu_weight<=70;    --같음

--학생 테이블로 부터
--컴퓨터정보 학생들의 이름, 학과 출력
select stu_name, stu_dept
from student
where stu_dept='컴퓨터정보';

--학생테이블로부터
--체중이 60~70사이의 데이터 출력
select *
from student
where stu_weight between 60 and 70;

--학생테이블로부터
--김씨 성을 가진 학생들 이름 출력
select stu_name
from student
where stu_name like '김%';

select enr_grade from enrol;
select enr_grade+5 from enrol;
select enr_grade-5 from enrol;

select stu_no from student;
--값 추출할떄 속성에 별명 붙이기
select stu_no as 학번추출하기 from student;

--결과 열에 별명 부여하기
select stu_no as ID, stu_name as "name" from student;

--||(concat 연결연산자)
select stu_dept||','||stu_name||'입니다' as 학과성명 from student;

select stu_name, stu_dept, stu_class, stu_grade
from student
where stu_dept='컴퓨터정보' and stu_grade=2;

--학번이 20140001dptj 20149999까지 검색(student)
select *
from student
where stu_no between 20140001 and 20149999; 

select stu_no, stu_name, stu_dept
from student
where stu_name like '_수%';

--student데이블 모든 필드 다 검색(학번이 2014로 시작해야함)
select *
from student
where stu_no like '2014%';

--16. 학생들의 학과, 학년 중복을 제거하고 검색하라. --건용 요한
select distinct stu_dept, stu_grade from student;
--17. 학생들의 학과, 반 중복을 제거하고 검색하라. --종진 한희
select distinct stu_dept, stu_class from student;
--18. 학생들의 체중을 5만큼 증가시킨 값을 검색하라. --현오 건상
select stu_weight+5 from student;
--19. 학생들의 체중을 5만큼 감소시킨 값을 검색하라. --준형 형민
select stu_weight-5 from student;
--20. 학생들의 학번과 이름을 별칭 "학번", "이름"으로 부여하여 검색하라. --한빈 승주
select stu_no as 학번, stu_name as 이름 from student;

--21. 수강(enrol)테이블의 모든 정보를 검색하라. --신요 승환
select * from enrol;
--22. 학생 테이블에서 학과명과 이름을 합쳐서 검색하라.(||) --현석 건용
select stu_dept||stu_name from student;
--23. 학생의 이름과 학과를 '컴퓨터정보과 옥한빛입니다'식으로 검색하라. --요한 종진
select stu_dept||'과 '||stu_name||'입니다' from student;
--24. 컴퓨터정보 학생들을 검색하라. --한희 현오
select * 
from student
where stu_dept='컴퓨터정보';
--25. 기계과 학생들을 검색하라. --건상 준형
select *
from student
where stu_dept='기계';

--IN(여러개 조건 값 중 하나만 만족하는 행 처리할 경우)
select stu_no, stu_name, stu_dept
from student
where stu_dept in('컴퓨터정보','기계');
--or연산자를 사용해서 출력할 수 있음
select stu_no, stu_name, stu_dept
from student
where stu_dept='컴퓨터정보' or stu_dept='기계';

--26. 전기전자과 학생들을 검색하라.
select * from student
where stu_dept='전기전자';
--27. 신장이 170이상인 학생들을 검색하라.
select * from student
where stu_height>=170;
--28. 체중이 65이상인 학생들을 검색하라.
select * from student
where stu_weight>=65;
--29. 기계 학생들의 학번, 이름을 검색하라.
select stu_no, stu_name from student
where stu_dept='기계';
--30. 컴퓨터정보 학생들의 학번, 이름을 검색하라.
select stu_no, stu_name from student
where stu_dept='컴퓨터정보';

--31. 남학생의 이름을 검색하라.
select stu_name from student
where stu_gender='M';
--32. 전기전자과 이외 학생들의 모든 정보를 검색하라.
select * from student
where stu_dept<>'전기전자';
--33. 점수가 80점 이상인 학생들의 학번을 검색하라.
select stu_no from enrol
where enr_grade>=80;
--34. '김인중'학생의 모든 정보를 검색하라.
select * from student
where stu_name='김인중';
--35. '기계'과 이고 2학년인 학생들의 모든 정보를 검색하라. 
select * from student
where stu_dept='기계' and stu_grade=2;

select stu_no, stu_height from student
where stu_height is null;


--36. 성별이 여학생이며, 체중이 
--60이하인 학생을 모두 검색하라.
select * from student
where stu_gender='F' and stu_weight<=60;
--37.'컴퓨터정보'외에 1학년 학생들의 
--이름을 검색하라.
select stu_name from student
where stu_dept not in '컴퓨터정보' and stu_grade=1;
--38. 학과 중 '기계'이외의 학과를 검색하라.
select sub_dept from subject
where sub_dept not in '기계';
--39. 컴퓨터정보과 2학년 A반 학생의 이름을
--검색하라.
select stu_name from student
where stu_dept in '컴퓨터정보' and stu_grade=2 and stu_class='A';
--40. 신장이 160이상이며 170이하인 학생의 학번과 이름을 검색하라
select stu_no, stu_name from student
where stu_height between 160 and 170;

--학생들의 성별을 소문자로 검색하라.
select lower(stu_gender)
from student;

--학생들의 학과, 이름을 연결하여 검색하라
select stu_dept||stu_name from student;

--concat이용
select concat(stu_dept, stu_name) from student;
--(~~과 ~학년 ~~~입니다.)
select stu_dept||'과 '||stu_grade||'학년 '||stu_name||'입니다.'
from student;

--학생들의 이름과 이름의 첫 2글자를 검색하라.(substr)
select substr(stu_name, 1,2) from student;

--학생들의 이름, 학과 그리고 학과의 두번째부터 1자리를 검색하라.(substr)
select stu_name, stu_dept, substr(stu_dept, 2, 1) as 글자추출
from student;

select instr('java database', 'a') from dual;
select instr('java database', 'a',5) from dual;

select round(345.678) from dual;
select round(345.678,0) from dual;
select round(345.678,1) from dual;
select round(345.678,-1) from dual;

--중략

--체중을 30으로 나눈 나머지를 검색하라.
select mod(stu_weight, 30) from student;

select sysdate-1 from dual;
select sysdate, add_months(sysdate,3) from dual;
select sysdate,next_day(sysdate,'월요일'),last_day(sysdate) from dual;

select to_char(to_number(1234.5678),'9999.999') from dual;

select stu_height from student;
--null 처리함수(정수형)
select nvl(stu_height,0) from student;
--null 처리함수(문자형)
select nvl(to_char(stu_height), '미기록') from student;

select stu_no, stu_name, nvl(stu_height, 0) +stu_weight from student;

--행(데이터)의 개수
select count(*) from student;

--중략

create table dept(
deptno number(2)
constraint pk_dept primary key,
dname VARCHAR2(14),
loc VARCHAR2(13));

insert into dept values(10,'ACCOUNTING', 'NEW YORK');
insert into dept values(20,'RESEARCH', 'DALLAS');
insert into dept values(30,'SALES','CHICAGO');
insert into dept values(40,'OPERATIONS', 'BOSTON');


create table emp(
empno number(4)
constraint pk_emp primary key,
ename VARCHAR2(10),
job VARCHAR2(9),
mgr NUMBER(4),
hiredate date,
sal number(7,2),
comm number(7,2),
deptno number(2));

insert into emp values(7839,'KING','PRESIDENT',NULL,to_date('17-11-1981','dd-mm-yyyy'),5000,NULL,10);
insert into emp values(7566,'JONES','MANAGER',7839,to_date('2-4-1981','dd-mm-yyyy'),2975,NULL,20);
insert into emp values(7698,'BLAKE','MANAGER',7839,to_date('1-5-1981','dd-mm-yyyy'),2850,NULL,30);
insert into emp values(7782,'CLARK','MANAGER',7839,to_date('9-6-1981','dd-mm-yyyy'),2450,NULL,10);
insert into emp values(7788,'SCOTT','ANALYST',7566,to_date('13-07-1987','dd-mm-yyyy'),3000,NULL,20);
insert into emp values(7902,'FORD','ANALYST',7566,to_date('3-12-1981','dd-mm-yyyy'),3000,NULL,20);
insert into emp values(7499,'ALLEN','SALESMAN',7698,to_date('20-2-1981','dd-mm-yyyy'),1600,300,30);
insert into emp values(7521,'WARD','SALESMAN',7698,to_date('22-2-1981','dd-mm-yyyy'),1250,500,30);
insert into emp values(7654,'MARTIN','SALESMAN',7698,to_date('28-9-1981','dd-mm-yyyy'),1250,1400,30);
insert into emp values(7844,'TURNER','SALESMAN',7698,to_date('8-9-1981','dd-mm-yyyy'),1500,0,30);
insert into emp values(7900,'JAMES','CLERK',7698,to_date('3-12-1981','dd-mm-yyyy'),950,NULL,30);
insert into emp values(7934,'MILLER','CLERK',7782,to_date('23-1-1982','dd-mm-yyyy'),1300,NULL,10);
insert into emp values(7369,'SMITH','CLERK',7902,to_date('17-12-1980','dd-mm-yyyy'),800,NULL,20);
insert into emp values(7876,'ADAMS','CLERK',7788,to_date('13-07-1987','dd-mm-yyyy'),1100,NULL,20);



create table salgrade(
grade number(7,2),
losal number(7,2),
hisal number(7,2));

insert into salgrade values(1,700,1200);
insert into salgrade values(2,1201,1400);
insert into salgrade values(3,1401,2000);
insert into salgrade values(4,2001,3000);
insert into salgrade values(5,3001,9999);


select * from dept;
select * from emp;
select * from salgrade;

--1.	사원 테이블의 구조를 검색하라.
desc emp;
--2.	부서 테이블의 구조를 검색하라.
desc dept;
--3.	급여 테이블의 구조를 검색하라.
desc salgrade;
--4.	사원들의 사원번호, 사원이름, 사원직무를 검색하라.
select empno, ename, job from emp;
--5.	부서의 부서번호와 부서이름을 검색하라.
select deptno, dname from dept;
--6.	부서의 부서이름과 지역을 검색하라.
select dname, loc from dept;
--7.	사원들의 급여와 커미션을 검색하라.
select sal, comm from emp;
--8.	사원들의 입사일 중복을 제거하고 검색하라.
select distinct hiredate from emp;
--9.	사원들의 상급자사원번호(mgr)중복을 제거하고 검색하라.
select distinct mgr from emp;
--10.	사원들의 부서번호 중복을 제거하고 검색하라.
select deptno from emp;
--11.	사원들의 이름과 6개월 급여의 합을 검색하라.
select ename, sum(sal*6) from emp group by ename;
--12.	사원들의 6개월 커미션(comm)의 합을 검색하라.
select sum(comm*6) from emp group by ename;
--13.	사원이름을 ‘name’으로 사원의 급여를 ‘salary’로 열의 이름을 부여하여 검색하라.
select ename as name, sal as salary from emp;
--14.	사원의 사원번호, 사원이름, 입사일, 부서번호를 한글로 바꾸어 검색하라.
select empno as 사원번호, ename as 사원이름, hiredate as 입사일, deptno as 부서번호 from emp;
--15.	부서번호, 부서이름, 지역을 한글 제목으로 검색하라.
select deptno as 부서번호, dname as 부서이름, loc as 지역 from dept;
--16.	사원의 사원직무와 사원이름을 합쳐서 검색하라.
select job||ename from emp;
--17.	입사일(hiredate) 사원이름을 ’80-12-17에 입사한 SMITH입니다’ 식으로 검색하라.
select hiredate||'에 입사한 '||ename||'입니다' from emp;
--18.	10번 부서에 근무하는 사원이름을 검색하라.
select ename from emp 
where deptno=10;
--19.	급여가 2000 이상인 사원들의 사원번호, 사원이름을 검색하라.
select empno, ename from emp
where sal>=2000;
--20.	사원직무가 “CLERK”인 사원들의 사원번호, 사원이름을 검색하라.
select empno, ename from emp
where job='CLERK';
--21.	1980년 12월 17일에 입사한 사원이름을 검색하라.
select ename from emp
where hiredate in ('1980-12-17');
--
select ename from emp
where to_char(hiredate, 'YYMMDD') like '801217';
--22.	부서번호 30이외의 부서이름과 지역을 검색하라.
select dname, loc from dept
where deptno not in 30;
--23.	급여등급이 5인 급여의 상위급여와 하위급여를 검색하라.
select hisal, losal from salgrade
where grade =5;
--24.	‘WARD’사원의 모든 정보를 검색하라.
select * from emp
where ename='WARD';
--25.	10번 부서의 근무하는 MANAGER의 사원이름을 검색하라.
select ename from emp
where deptno in 10 and job ='MANAGER';
--26.	급여가 2000이상이며, 30번 부서에 근무하는 사원들의 사원번호와 사원이름을 검색하라.
select empno, ename from emp 
where sal>=2000 and deptno=30;
--★☆★☆★☆★☆
--27.	사원직무가 “CLERK”이며, 81년 이후에 입사한 사원들의 사원번호와 사원이름을 검색하라.
--to_char사용
select empno, ename from emp
where job='CLERK' and to_char(hiredate,'YYmmdd')>=810000;
--to_number사용
select empno, ename from emp
where job='CLERK' and to_number(to_char(hiredate,'YYmmdd'))>=810000;

--28.   부서번호 20 외에 근무하는 MANAGER의 사원이름을 검색하라.
select ename from emp
where deptno not in 20 and job='MANAGER';
--29.	BOSTON이외 지역에 있는 부서이름을 검색하라.
select dname from dept
where loc not in 'BOSTON';
--30.	SALEMAN이며 급여가 1500이상인 사원이름을 검색하라.
select empno, ename, sal from emp
where sal between 1000 and 2500;
--31.	급여가 1000이상이며, 2500이하인 사원의 사원번호, 사원이름, 급여를 검색하라.
select empno, ename, sal from emp
where sal between 1000 and 2500;
--32.	사원번호가 75XX인 사원의 사원번호, 사원이름, 부서번호를 검색하라.
select empno, ename, deptno from emp
where empno like '75__';
--33.	부서번호가 10 또는 30에 근무하는 사원들의 사원이름과 급여를 검색하라.
select ename, sal from emp
where deptno=10 or deptno=30;
--34.	상급자사원번호가 76으로 시작하는 사원들의 사원이름을 검색하라.
select ename from emp
where mgr like '76%';
--35.	사원번호가 79로 시작하는 사원들의 사원이름, 급여, 커미션을 검색하라.
select ename, sal, comm from emp
where empno like '79%';
--★☆★☆★☆★☆
--36.	1981년 2월에 입사한 사원의 사원번호, 사원이름, 부서번호를 검색하라.
select empno, ename, deptno from emp
where hiredate between '1981-02-01' and '1981-02-28';
--to_char사용
select empno, ename, deptno from emp
where to_char(hiredate,'YYMM')=8102;
--like 사용
select empno,ename,deptno from emp
where hiredate like '81/02%';
--to_char, like 사용
select empno,ename,deptno,hiredate from emp
where to_char(hiredate, 'YYMM') like '8102%';
--37.	사원이름 중간에 ‘A’가 들어있는 사원의 사원번호와 사원이름을 검색하라.
select empno, ename from emp
where ename like '%A%';
--★☆★☆★☆★☆
--38.	상급자사원번호가 NULL인 사원의 사원번호와 사원이름을 검색하라.
select empno, ename from emp
where mgr is null;
--nvl함수 사용
select empno, ename from emp
where nvl(mgr, 0)=0;
--39.	상급자사원번호가 NULL이 아닌 사원의 사원번호, 이름, 상급자사원번호를 검색하라.
select empno, ename, mgr from emp
where mgr is not null;
--40.	사원번호가 7902 또는 7781인 사원이름을 검색하라.
select ename from emp
where empno = 7902 or empno = 7781;
